name: test

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'pkg/*'

env:
  APP_NAME: super_unko

jobs:
  skip:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Skip job"

  before:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "no [skip ci]"

  build-image:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v2
      - uses: satackey/action-docker-layer-caching@v0.0.8
      - name: Build ${{ env.APP_NAME }} image
        run: docker-compose build ${{ env.APP_NAME }}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [default, "3.2", "4.0", "4.1", "4.2", "4.3", "4.4", "5.0"]
    needs: build-image
    steps:
      - uses: actions/checkout@v2
      - uses: satackey/action-docker-layer-caching@v0.0.8
      - name: Test
        run: docker-compose -f docker-compose-ci.yml run ci_sh_${{ matrix.version }}

  format:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v2
      - name: Run format
        run: ./linter.sh format

  lint:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v2
      - name: Run lint
        run: ./linter.sh lint

  update-repository:
    runs-on: ubuntu-latest
    needs: [test, format, lint]
    if: github.ref == 'refs/heads/oshiri'
    steps:
      - uses: actions/checkout@v2

        # deb, rpmファイルの生成
      - name: Set latest tag version to output
        id: vars
        run: echo ::set-output name=tag::$(git tag -l '*.*.*' | sort -V | tail -n 1)
      - name: Set tag version to .tar2package.yml
        run: sed -i 's:\$VERSION:${{ steps.vars.outputs.tag }}:g' .tar2package.yml
      - name: Print .tar2package.yml
        run: cat .tar2package.yml
      - name: Generate packages
        run: ./package.sh
      - name: Git commit packages
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pkg/*
          git commit -m ":arrow_up: [CI] update pkg/${{ env.APP_NAME }}.deb and pkg/${{ env.APP_NAME }}.rpm"

        # READMEに目次を埋め込む
      - name: Install gh-md-toc
        run: |
          wget https://raw.githubusercontent.com/ekalinin/github-markdown-toc/master/gh-md-toc
          chmod +x gh-md-toc
      - name: Insert TOC
        run: |
          ./gh-md-toc --insert *.md doc/*.md
          rm *.md.orig.*
          rm *.md.toc.*
          rm doc/*.md.orig.*
          rm doc/*.md.toc.*
      - name: Git commit documents
        run: |
          git add *.md doc/*.md
          git commit -m ":memo: [CI] update TOC"

      - name: Git push
        uses: ad-m/github-push-action@v0.5.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: oshiri
